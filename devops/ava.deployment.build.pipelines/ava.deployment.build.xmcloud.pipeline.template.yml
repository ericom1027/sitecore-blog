steps:
  - task: UseDotNet@2
    inputs:
      packageType: "sdk"
      version: "6.0.x"
      vsVersion: "2019"

  - task: PowerShell@2
    displayName: "Login and Deploy"
    inputs:
      workingDirectory: $(jssAppPath)
      targetType: "inline"
      script: |
        dotnet tool restore
        dotnet sitecore cloud login --client-credentials --client-id $(XM_CLOUD_CLIENT_ID) --client-secret $(XM_CLOUD_CLIENT_SECRET) --allow-write
        dotnet sitecore connect --cm $(XM_CLOUD_API_HOST)  --allow-write true -n default
        echo 'Logged in - deploying to xm cloud'
        dotnet sitecore cloud deployment create `
          --environment-id $(XM_CLOUD_ENVIRONMENT_ID) `
          --upload `
          --trace | Tee-Object -Variable deploymentOutput

        $matchedLines = ($deploymentOutput | Where-Object { $_ -match "Deployment Id\s*:\s*'(?<id>\S+)'"})

        if ($matchedLines.Count -lt 1) {
          exit 1
        }

        $status = dotnet sitecore cloud deployment watch `
          --deployment-id $Matches.id `
          --json | ConvertFrom-Json

        if ($status.StatusByTask.Calculated -eq 'Failed') {
          Write-Error "Deployment status is 'failed'"
          exit 1
        }
         if ($LASTEXITCODE -eq 0) {
          Write-Host "`nDeployment successful, pushing Sitecore items`n"
            dotnet sitecore ser push -e RenderingHost
         }

